---
- name: Stop node services
  service:
    name:  "{{ item }}"
    state: stopped
  with_items:
    - kubelet
    - kube-proxy

- name: Copy node binaries
  command: cp /{{ download_dir }}/kubernetes/server/bin/{{ item }} /usr/bin/
  with_items:
    - kubelet
    - kube-proxy
    - kubectl

- name: Configure node binary permissions
  file:
    path:  /usr/bin/{{ item }}
    state: file
    mode:  0755
    owner: kube
    group: kube
  with_items:
    - kubelet
    - kube-proxy
    - kubectl

- name: Copy node service files
  copy:
    src: "{{ item }}.service"
    dest: /usr/lib/systemd/system/{{ item }}.service
  with_items:
    - kubelet
    - kube-proxy
  notify:
    - Reload Systemd
    - Restart node daemons
  tags:
    - copy_kubernetes_service_files

- name: Copy node config files
  template:
    src: "{{ item }}.j2"
    dest: /etc/kubernetes/{{ item }}
  with_items:
    - config
    - kubelet
    - proxy
  notify:
    - Reload Systemd
    - Restart node daemons
  tags:
    - copy_kubernetes_config_files

- name: Configure node config file permissions
  file:
    path:  /etc/kubernetes/{{ item }}
    state: file
    mode:  0644
    owner: kube
    group: kube
  notify:
    - Restart node daemons
  with_items:
    - config
    - kubelet
    - proxy

- name: Create /var/lib/kubelet/
  file:
    path: /var/lib/kubelet/
    state: directory
    owner: kube
    group: kube
    mode:  0755

- name: Reload Systemd
  command: systemctl daemon-reload

- name: Enable and start node services
  service:
    name:    "{{ item }}"
    enabled: yes
    state:   started
  ignore_errors: yes
  with_items:
    - kubelet
    - kube-proxy

# - name: Configure firewalld ports for etcd
#   firewalld: 
#     port:      "{{ item }}/tcp"
#     permanent: yes 
#     state:     enabled
#     immediate: yes
#   with_items:
#     - 2379
#     - 2380
#   when: use_firewalld


